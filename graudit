#!/bin/bash
# Graudit - Rough code review tool using grep
# Written by Wireghoul - http://www.justanotherhacker.com
# Released under the GPL licence
set -e
set -o pipefail

VERSION='1.6'
grdir=`dirname $0`

# Default values
context=1
color='always'
sigdb='default'
separator='##############################################'

#Save custom colors
OLD_COLORS=$GREP_COLORS

if [ ! -x /bin/grep ]; then
    echo "/bin/grep not found"
    exit 2
fi
/bin/grep --exclude-dir=. test "$0" >/dev/null 2>&1
if [ $? -eq 2 ]; then
    echo $?
    echo "Graudit requires a newer version of grep (>=2.5.3)"
    exit 2
fi
version () {
    echo "Graudit version: $VERSION"
}

usage () {
    cat <<EOU
Usage: graudit [opts] /path/to/scan

OPTIONS
  -h show this message
  -v show version number
  -d database to use
  -i case insensitive search
  -c number of lines of context to display
  -z supress colors
  -Z Hight contrast colors

Database is one of asp, jsp, other, perl, php, python or default, not providing a database will use default
/path is the path to the file or directory to audit
EOU
}

while getopts "hvizZd:c:" opt; do
    case $opt in
        h)
            usage
            exit 1
        ;;
        v)
            version
            exit 0
        ;;
        z)
            color='none'
        ;;
        Z)
            export GREP_COLORS='ms=41;01;37:mc=01;31:sl=:cx=:fn=35:ln=32:bn=32:se=36'
        ;;
        c)
            context="$OPTARG"
        ;;
        d)
            sigdb="$OPTARG"
        ;;
        i)
            icase="-i"
        ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            usage
            exit 2
        ;;
    esac
done
#Remove arguments from $@
shift $((OPTIND-1))

#Database location can vary based on installation
if [ "$sigdb" == '-' ]; then
    database='-'
elif [ -f /usr/share/graudit/$sigdb.db ]; then
    database=/usr/share/graudit/$sigdb.db
elif [ -f ~/.graudit/$sigdb.db ]; then
    database=~/.graudit/$sigdb.db
elif [ -f $grdir/signatures/$sigdb.db ]; then
    database=$grdir/signatures/$sigdb.db
else
    database=$sigdb
fi


if [ -z "$1" ]; then
        usage
        exit 2
fi

# -R is recursive
# -H prints the name of the file
# -C prints # lines of context before and after the match
# -E uses extended regexp
# -f specifies the rule file (signature database)
# -n prints the line number

grep    --color=$color \
        --exclude-dir=.svn \
        --exclude-dir=.cvs \
        --exclude-dir=.git \
        $icase \
        -n -R -H -C $context -E \
        -f "$database" "$@" \
        | sed -e"s/^\(\x1b\[.*m\x1b\[K\)--\(\x1b\[\)/\1##############################################\2/" -e"s/^--$/$separator/"
SUCCESS=$?
export GREP_COLORS="$OLD_COLORS"
exit $SUCCESS
